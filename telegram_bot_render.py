#!/usr/bin/env python3
"""
Telegram Monitor Bot –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã MEXC (–≤–µ—Ä—Å–∏—è –¥–ª—è Render –±–µ–∑ schedule)
"""

import os
import logging
import threading
import time
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN", "")
CHAT_ID = os.environ.get("TELEGRAM_CHAT_ID", "")

class MexcTradingMonitor:
    """Telegram –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–æ—Ä–≥–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    
    def __init__(self, token: str, chat_id: str):
        self.token = token
        self.chat_id = chat_id
        self.application = None
    
    def create_main_menu(self) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
        keyboard = [
            [InlineKeyboardButton("üìä –¢–æ—Ä–≥–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", callback_data="trading_activity")],
            [InlineKeyboardButton("üßæ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞", callback_data="weekly_report")],
            [InlineKeyboardButton("‚ö†Ô∏è –û—à–∏–±–∫–∏ –∏ –æ—Ç–∫–∞–∑—ã", callback_data="errors_report")],
            [InlineKeyboardButton("üîî –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="system_notifications")],
            [InlineKeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å / –ê–∫–∫–∞—É–Ω—Ç", callback_data="profile")],
            [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")],
        ]
        return InlineKeyboardMarkup(keyboard)
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        welcome_message = """ü§ñ *MEXC Trading Bot Monitor*

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞!

üìà *–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:*
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–æ—Ä–≥–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –ø–æ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏  
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏ –ø—Ä–æ–±–ª–µ–º
‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"""
        
        await update.message.reply_text(
            welcome_message,
            parse_mode='Markdown',
            reply_markup=self.create_main_menu()
        )
    
    async def menu_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu"""
        await update.message.reply_text(
            "üìã *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*",
            parse_mode='Markdown',
            reply_markup=self.create_main_menu()
        )
    
    async def handle_button_click(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é"""
        query = update.callback_query
        await query.answer()
        
        if query.data == "trading_activity":
            await self.display_trading_activity(query)
        elif query.data == "weekly_report":
            await self.display_weekly_report(query)
        elif query.data == "errors_report":
            await self.display_errors_report(query)
        elif query.data == "system_notifications":
            await self.display_system_notifications(query)
        elif query.data == "profile":
            await self.display_profile(query)
        elif query.data == "settings":
            await self.display_settings(query)
        elif query.data == "back_to_menu":
            await query.edit_message_text(
                "üìã *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*",
                parse_mode='Markdown',
                reply_markup=self.create_main_menu()
            )
    
    async def display_trading_activity(self, query):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
        current_time = datetime.now().strftime('%H:%M:%S')
        text = f"""üìä *–¢–æ—Ä–≥–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (24 —á–∞—Å–∞)*

üîπ *–í—Ö–æ–¥—ã –≤ —Å–¥–µ–ª–∫–∏:* 3
üîπ *–í—ã—Ö–æ–¥—ã –∏–∑ —Å–¥–µ–ª–æ–∫:* 2
üîπ *–û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–π–ª–∏–Ω–≥–∞:* 5

üìà *–û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏:* 1
üí∞ *–ë–∞–ª–∞–Ω—Å:* $246.87 USDT

üîÑ *–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:* {current_time}"""
        
        back_button = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        
        await query.edit_message_text(
            text,
            parse_mode='Markdown',
            reply_markup=InlineKeyboardMarkup(back_button)
        )
    
    async def display_weekly_report(self, query):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Å–≤–æ–¥–∫–∏"""
        text = """üßæ *–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞*

üí∞ *–ë–∞–ª–∞–Ω—Å:* $246.87 USDT
üìä *–û–±—â–∏–π –∫–∞–ø–∏—Ç–∞–ª:* $246.87 USDT
üìà *–ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è P&L:* $0.00 USDT

üìã *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–¥–µ–ª–æ–∫:*
‚Ä¢ –í—Å–µ–≥–æ —Å–∏–≥–Ω–∞–ª–æ–≤: 12
‚Ä¢ –£—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: 9
‚Ä¢ Win Rate: 75.0%

üîÑ *–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:*
‚Ä¢ –í—Ö–æ–¥—ã: 6
‚Ä¢ –í—ã—Ö–æ–¥—ã: 5
‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–π–ª–∏–Ω–≥–∞: 8"""
        
        back_button = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        
        await query.edit_message_text(
            text,
            parse_mode='Markdown',
            reply_markup=InlineKeyboardMarkup(back_button)
        )
    
    async def display_errors_report(self, query):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–∞—Ö"""
        text = """‚ö†Ô∏è *–û—à–∏–±–∫–∏ –∏ –æ—Ç–∫–∞–∑—ã (7 –¥–Ω–µ–π)*

üö® *API –æ—à–∏–±–∫–∏:* 1
üìÑ *–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON:* 0
‚ùå *–ù–µ—É–¥–∞—á–Ω—ã–µ —Å–¥–µ–ª–∫–∏:* 2

üìä *–û–±—â–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å:* 91.7%

üîç *–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:* üü¢ –ê–∫—Ç–∏–≤–Ω–∞"""
        
        back_button = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        
        await query.edit_message_text(
            text,
            parse_mode='Markdown',
            reply_markup=InlineKeyboardMarkup(back_button)
        )
    
    async def display_system_notifications(self, query):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        current_datetime = datetime.now().strftime('%d.%m.%Y %H:%M:%S')
        text = f"""üîî *–°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è*

üåê *–°—Ç–∞—Ç—É—Å MEXC API:* üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω
ü§ñ *Flask —Å–µ—Ä–≤–µ—Ä:* üü¢ –ê–∫—Ç–∏–≤–µ–Ω
üì° *Webhook:* üü¢ –ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É —Å–∏–≥–Ω–∞–ª–æ–≤

‚è∞ *–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞:* {current_datetime}

*–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤*"""
        
        back_button = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        
        await query.edit_message_text(
            text,
            parse_mode='Markdown',
            reply_markup=InlineKeyboardMarkup(back_button)
        )
    
    async def display_profile(self, query):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        text = """üë§ *–ü—Ä–æ—Ñ–∏–ª—å / –ê–∫–∫–∞—É–Ω—Ç*

üí∞ *–ë–∞–ª–∞–Ω—Å:* $246.87 USDT
üìä *–û–±—â–∏–π –∫–∞–ø–∏—Ç–∞–ª:* $246.87 USDT
üìà *–ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è P&L:* $0.00 USDT

üéØ *–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏:* 0
üìä *–í—Å–µ–≥–æ —Å–∏–≥–Ω–∞–ª–æ–≤ (30 –¥–Ω–µ–π):* 25
‚úÖ *–£—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫:* 19

üïí *–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:* 24/7 —Ä–µ–∂–∏–º
üåê *–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:* MEXC Futures"""
        
        back_button = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        
        await query.edit_message_text(
            text,
            parse_mode='Markdown',
            reply_markup=InlineKeyboardMarkup(back_button)
        )
    
    async def display_settings(self, query):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        text = f"""‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏*

üîî *–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:* üü¢ –í–∫–ª—é—á–µ–Ω—ã
üìä *–û—Ç—á–µ—Ç—ã:* –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ
‚è∞ *–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:* –ö–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤

üì± *Telegram Chat ID:* {self.chat_id}
ü§ñ *–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω:* {"üü¢ –î–∞" if self.token else "üî¥ –ù–µ—Ç"}

*–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è*"""
        
        back_button = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        
        await query.edit_message_text(
            text,
            parse_mode='Markdown',
            reply_markup=InlineKeyboardMarkup(back_button)
        )
    
    def system_health_monitor(self):
        """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤"""
        while True:
            # –û–∂–∏–¥–∞–Ω–∏–µ 12 —á–∞—Å–æ–≤ (43200 —Å–µ–∫—É–Ω–¥)
            time.sleep(12 * 60 * 60)
            logger.info("üîî –°–∏—Å—Ç–µ–º–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: —Ç–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω")
    
    def initialize_bot(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        if not self.token:
            logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            return
        
        if not self.chat_id:
            logger.error("TELEGRAM_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            return
        
        # –°–æ–∑–¥–∞–Ω–∏–µ Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        self.application = Application.builder().token(self.token).build()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("menu", self.menu_command))
        self.application.add_handler(CallbackQueryHandler(self.handle_button_click))
        
        # –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
        monitor_thread = threading.Thread(target=self.system_health_monitor, daemon=True)
        monitor_thread.start()
        
        logger.info("üöÄ Telegram Monitor Bot –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        logger.info(f"ü§ñ –ë–æ—Ç: @Kwin_eth_bot")
        logger.info(f"üì± Chat ID: {self.chat_id}")
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling
        self.application.run_polling()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    monitor_bot = MexcTradingMonitor(TELEGRAM_TOKEN, CHAT_ID)
    monitor_bot.initialize_bot()

if __name__ == "__main__":
    main()