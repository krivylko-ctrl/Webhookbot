import streamlit as st
import sys
import os

# –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—à—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ –ø–æ–¥–ø–∞–ø–∫–∏ ‚Äî –¥–æ–±–∞–≤–∏–º –∫–æ—Ä–µ–Ω—å –≤ PYTHONPATH
ROOT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if ROOT_DIR not in sys.path:
    sys.path.append(ROOT_DIR)

from config import Config

st.set_page_config(
    page_title="KWIN Bot - –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
    page_icon="‚öôÔ∏è",
    layout="wide"
)

def main():
    st.title("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ KWIN Trading Bot")
    st.markdown("---")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–≤–Ω—É—Ç—Ä–∏ –æ–Ω–∞ –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ—Ç config.json, –µ—Å–ª–∏ –µ—Å—Ç—å)
    config = Config()

    # ========================= –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ / –∏—Å—Ç–æ—á–Ω–∏–∫–∏ =========================
    st.subheader("üß© –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ü–µ–Ω")
    i1, i2, i3 = st.columns(3)
    with i1:
        symbol = st.text_input("–°–∏–º–≤–æ–ª", value=str(getattr(config, "symbol", "ETHUSDT")).upper())
    with i2:
        price_for_logic = st.selectbox(
            "–ò—Å—Ç–æ—á–Ω–∏–∫ —Ü–µ–Ω—ã –¥–ª—è –ª–æ–≥–∏–∫–∏",
            options=["last", "mark"],
            index=0 if str(getattr(config, "price_for_logic", "last")).lower() == "last" else 1,
            help="–ö–∞–∫—É—é —Ü–µ–Ω—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Ä–∞—Å—á—ë—Ç–æ–≤ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏."
        )
    with i3:
        trigger_price_source = st.selectbox(
            "–¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è SL/TP –Ω–∞ –±–∏—Ä–∂–µ",
            options=["mark", "last"],
            index=0 if str(getattr(config, "trigger_price_source", "mark")).lower() == "mark" else 1,
            help="–ü–æ –∫–∞–∫–æ–π —Ü–µ–Ω–µ (Mark/Last) –±–∏—Ä–∂–∞ –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ SL/TP."
        )

    st.markdown("---")

    # ========================= –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏ =========================
    st.subheader("üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏")

    col1, col2, col3 = st.columns(3)
    with col1:
        risk_pct = st.number_input(
            "–†–∏—Å–∫ –Ω–∞ —Å–¥–µ–ª–∫—É (%)",
            min_value=0.1,
            max_value=10.0,
            value=float(getattr(config, "risk_pct", 3.0)),
            step=0.1,
            help="–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞, —Ä–∏—Å–∫—É–µ–º—ã–π –Ω–∞ –æ–¥–Ω—É —Å–¥–µ–ª–∫—É"
        )
        max_qty = st.number_input(
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è (–≤ –±–∞–∑–æ–≤–æ–º –∞–∫—Ç–∏–≤–µ)",
            min_value=0.001,
            max_value=10000.0,
            value=float(getattr(config, "max_qty_manual", 50.0)),
            step=0.001,
            help="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ (—É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞)"
        )
        limit_qty_enabled = st.checkbox(
            "–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é",
            value=bool(getattr(config, "limit_qty_enabled", True))
        )
    with col2:
        risk_reward = st.number_input(
            "Risk/Reward —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ",
            min_value=0.5,
            max_value=5.0,
            value=float(getattr(config, "risk_reward", 1.3)),
            step=0.1,
            help="–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏ –∫ —É–±—ã—Ç–∫—É (R:R)"
        )
        taker_fee_rate = st.number_input(
            "–ö–æ–º–∏—Å—Å–∏—è taker (–¥–µ—Å—è—Ç–∏—á–Ω–∞—è)",
            min_value=0.0,
            max_value=0.01,
            value=float(getattr(config, "taker_fee_rate", 0.00055)),
            step=0.00005
        )
        use_take_profit = st.checkbox(
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Take Profit",
            value=bool(getattr(config, "use_take_profit", True))
        )
    with col3:
        sfp_len = st.number_input(
            "SFP Length",
            min_value=1,
            max_value=10,
            value=int(getattr(config, 'sfp_len', 2)),
            help="–î–ª–∏–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ Swing Failure Pattern (–∫–∞–∫ –≤ Pine)"
        )
        intrabar_tf = st.selectbox(
            "–ò–Ω—Ç—Ä–∞–±–∞—Ä TF",
            options=["1", "3", "5"],
            index=["1","3","5"].index(str(getattr(config, "intrabar_tf", "1"))),
            help="–¢–∞–π–º—Ñ—Ä–µ–π–º –¥–ª—è –∏–Ω—Ç—Ä–∞–±–∞—Ä–Ω–æ–π –ª–æ–≥–∏–∫–∏/–¥–∞–Ω–Ω—ã—Ö."
        )
        use_intrabar = st.checkbox(
            "–í–∫–ª—é—á–∏—Ç—å –∏–Ω—Ç—Ä–∞–±–∞—Ä-—Ç—Ä–µ–π–ª/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
            value=bool(getattr(config, "use_intrabar", True))
        )

    st.markdown("---")

    # =========================== –§–∏–ª—å—Ç—Ä—ã (–∏–∑ Pine) ===========================
    st.subheader("üõ°Ô∏è –§–∏–ª—å—Ç—Ä—ã SFP")

    f1, f2, f3 = st.columns(3)
    with f1:
        use_sfp_quality = st.checkbox(
            "–§–∏–ª—å—Ç—Ä –∫–∞—á–µ—Å—Ç–≤–∞ SFP (wick + close-back)",
            value=bool(getattr(config, 'use_sfp_quality', True)),
            help="–í–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∫–∞—á–µ—Å—Ç–≤–∞ SFP"
        )
    with f2:
        wick_min_ticks = st.number_input(
            "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ —Ñ–∏—Ç–∏–ª—è (–≤ —Ç–∏–∫–∞—Ö)",
            min_value=0,
            max_value=100,
            value=int(getattr(config, 'wick_min_ticks', 7)),
            help="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ —Ñ–∏—Ç–∏–ª—è –¥–ª—è –≤–∞–ª–∏–¥–Ω–æ–≥–æ SFP (–≤ —Ç–∏–∫-—Å–∞–π–∑–∞—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞)"
        )
    with f3:
        close_back_pct = st.number_input(
            "Close-back (0.0 ‚Ä¶ 1.0)",
            min_value=0.0,
            max_value=1.0,
            value=float(getattr(config, 'close_back_pct', 1.0)),
            step=0.05,
            help="–¢—Ä–µ–±—É–µ–º–∞—è –¥–æ–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≥–ª—É–±–∏–Ω—ã —Ñ–∏—Ç–∏–ª—è (–∫–∞–∫ –≤ Pine)"
        )

    st.markdown("---")

    # ======================= Stop-Loss Zone (Pine-like) =======================
    st.subheader("üìå Stop-Loss Zone (Pine-like)")
    z1, z2, z3, z4, z5 = st.columns(5)
    with z1:
        use_swing_sl = st.checkbox(
            "SL –æ—Ç —Å–≤–∏–Ω–≥–∞ (pivot)",
            value=bool(getattr(config, "use_swing_sl", True)),
            help="–ë–∞–∑–∞ SL ‚Äî —Å–≤–∏–Ω–≥–æ–≤—ã–π high/low (pivot)."
        )
    with z2:
        use_prev_candle_sl = st.checkbox(
            "SL –æ—Ç —Å–≤–µ—á–∏ [1]",
            value=bool(getattr(config, "use_prev_candle_sl", False)),
            help="–ë–∞–∑–∞ SL ‚Äî high[1]/low[1] (–ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å–≤–µ—á–∞)."
        )
    with z3:
        sl_buf_ticks = st.number_input(
            "–ë—É—Ñ–µ—Ä –∫ SL (ticks)",
            min_value=0,
            max_value=2000,
            value=int(getattr(config, "sl_buf_ticks", 40)),
            step=1,
            help="–û—Ç—Å—Ç—É–ø –æ—Ç –±–∞–∑—ã –≤ —Ç–∏–∫-—Å–∞–π–∑–∞—Ö, –¥–æ–±–∞–≤–ª—è–µ–º—ã–π –∫ SL."
        )
    with z4:
        use_atr_buffer = st.checkbox(
            "ATR-–±—É—Ñ–µ—Ä",
            value=bool(getattr(config, "use_atr_buffer", False)),
            help="–î–æ–±–∞–≤–ª—è—Ç—å –∫ SL –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–¥—É—à–∫—É ATR*mult."
        )
    with z5:
        atr_mult = st.number_input(
            "ATR Mult",
            min_value=0.0,
            max_value=10.0,
            value=float(getattr(config, "atr_mult", 0.0)),
            step=0.1,
            help="–ú–Ω–æ–∂–∏—Ç–µ–ª—å ATR –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –±—É—Ñ–µ—Ä–∞ –∫ SL (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)."
        )

    st.markdown("---")

    # =============================== Smart Trailing ================================
    st.subheader("üéØ Smart Trailing")

    t1, t2, t3 = st.columns(3)
    with t1:
        enable_smart_trail = st.checkbox(
            "–í–∫–ª—é—á–∏—Ç—å Smart Trailing",
            value=bool(getattr(config, 'enable_smart_trail', True)),
            help="–£–º–Ω—ã–π —Ç—Ä–µ–π–ª–∏–Ω–≥ SL (–∞–Ω–∞–ª–æ–≥ Pine-–ª–æ–≥–∏–∫–∏)"
        )
        use_arm_after_rr = st.checkbox(
            "–ê—Ä–º–∏–Ω–≥ —Ç—Ä–µ–π–ª–∞ –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è RR",
            value=bool(getattr(config, 'use_arm_after_rr', True)),
            help="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–π–ª–∏–Ω–≥ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ RR"
        )
        arm_rr = st.number_input(
            "RR –¥–ª—è –∞—Ä–º–∏–Ω–≥–∞",
            min_value=0.1,
            max_value=5.0,
            value=float(getattr(config, 'arm_rr', 0.5)),
            step=0.1,
            help="–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ R, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–∫–ª—é—á–∞–µ—Ç—Å—è —Ç—Ä–µ–π–ª"
        )
        arm_rr_basis = st.selectbox(
            "–ë–∞–∑–∞ —Ä–∞—Å—á—ë—Ç–∞ RR –¥–ª—è –∞—Ä–º–∏–Ω–≥–∞",
            options=["extremum", "last"],
            index=0 if str(getattr(config, "arm_rr_basis", "extremum")).lower() == "extremum" else 1,
            help="extremum ‚Äî —Å—á–∏—Ç–∞–µ–º –æ—Ç —ç–∫—Å—Ç—Ä–µ–º—É–º–∞ –±–∞—Ä–∞; last ‚Äî –æ—Ç —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã"
        )
    with t2:
        trailing_basis = st.selectbox(
            "–ë–∞–∑–∏—Å —Ç—Ä–µ–π–ª–∞",
            options=["risk_r", "entry_pct"],
            index=0 if str(getattr(config, "trailing_basis", "risk_r")) == "risk_r" else 1,
            help="risk_r ‚Äî –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –≤ R (—Ä–∏—Å–∫-—é–Ω–∏—Ç–∞—Ö), entry_pct ‚Äî –ø—Ä–æ—Ü–µ–Ω—Ç—ã –æ—Ç —Ü–µ–Ω—ã –≤—Ö–æ–¥–∞."
        )
        trailing_r = st.number_input(
            "Trailing (–≤ R)",
            min_value=0.0,
            max_value=5.0,
            value=float(getattr(config, "trailing_r", 0.5)),
            step=0.1,
            help="–î–∏—Å—Ç–∞–Ω—Ü–∏—è —Ç—Ä–µ–π–ª–∞ –≤ R (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –±–∞–∑–∏—Å–µ risk_r)."
        )
        trailing_offset_r = st.number_input(
            "Offset (–≤ R)",
            min_value=0.0,
            max_value=5.0,
            value=float(getattr(config, "trailing_offset_r", 0.0)),
            step=0.1,
            help="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø –≤ R –ø—Ä–∏ –±–∞–∑–∏—Å–µ risk_r."
        )
    with t3:
        trailing_perc = st.number_input(
            "–ü—Ä–æ—Ü–µ–Ω—Ç —Ç—Ä–µ–π–ª–∏–Ω–≥–∞ (%)",
            min_value=0.0,
            max_value=5.0,
            value=float(getattr(config, 'trailing_perc', 0.5)),
            step=0.1,
            help="–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç —Ü–µ–Ω—ã –≤—Ö–æ–¥–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –±–∞–∑–∏—Å–µ entry_pct)."
        )
        trailing_offset_perc = st.number_input(
            "Offset —Ç—Ä–µ–π–ª–∏–Ω–≥–∞ (%)",
            min_value=0.0,
            max_value=5.0,
            value=float(getattr(config, 'trailing_offset_perc', 0.4)),
            step=0.1,
            help="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –±–∞–∑–∏—Å–µ entry_pct)."
        )
        # —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
        st.caption("–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –±–∞–∑–∏—Å risk_r ‚Äî –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è, –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.")

    st.markdown("---")

    # =============================== –ë–∞—Ä–æ–≤—ã–π —Ç—Ä–µ–π–ª / –ø—Ä–æ—á–µ–µ ===============================
    st.subheader("üß± –ë–∞—Ä–æ–≤—ã–π —Ç—Ä–µ–π–ª / –ø—Ä–æ—á–µ–µ")
    b1, b2, b3 = st.columns(3)
    with b1:
        use_bar_trail = st.checkbox(
            "–ë–∞—Ä–æ–≤—ã–π —Ç—Ä–µ–π–ª–∏–Ω–≥ (lowest/highest N –∑–∞–∫—Ä—ã—Ç—ã—Ö –±–∞—Ä–æ–≤)",
            value=bool(getattr(config, 'use_bar_trail', True)),
        )
    with b2:
        trail_lookback = st.number_input(
            "Trail lookback bars",
            min_value=1,
            max_value=300,
            value=int(getattr(config, "trail_lookback", 50)),
            step=1
        )
    with b3:
        trail_buf_ticks = st.number_input(
            "Trail buffer (ticks)",
            min_value=0,
            max_value=500,
            value=int(getattr(config, "trail_buf_ticks", 40)),
            step=1
        )

    st.markdown("---")

    # =============================== –ö–æ–Ω—Ç—Ä–æ–ª—å –ø–µ—Ä–µ–∑–∞—Ö–æ–¥–æ–≤ ===============================
    st.subheader("üßä Cooldown –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–∑–∏—Ü–∏–∏")
    cd1 = st.number_input(
        "Cooldown (–º–∏–Ω—É—Ç—ã)",
        min_value=0,
        max_value=240,
        value=int(getattr(config, "cooldown_minutes", 0)),
        step=1,
        help="–ó–∞–ø—Ä–µ—â–∞—Ç—å –Ω–æ–≤—ã–µ –≤—Ö–æ–¥—ã –≤ —Ç–µ—á–µ–Ω–∏–µ N –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–∑–∏—Ü–∏–∏ (—á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å—Å—è —Å—Ä–∞–∑—É)."
    )

    st.markdown("---")

    # ============================== –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ==============================
    c1, c2, c3 = st.columns([1, 2, 1])
    with c2:
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", type="primary", use_container_width=True):
            try:
                # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                config.symbol = str(symbol).upper()

                # –ò—Å—Ç–æ—á–Ω–∏–∫–∏
                config.price_for_logic = str(price_for_logic).lower()
                config.trigger_price_source = str(trigger_price_source).lower()

                # –†–∏—Å–∫/–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
                config.risk_pct = float(risk_pct)
                config.risk_reward = float(risk_reward)
                config.limit_qty_enabled = bool(limit_qty_enabled)
                config.max_qty_manual = float(max_qty)
                config.taker_fee_rate = float(taker_fee_rate)
                config.use_take_profit = bool(use_take_profit)

                # SFP
                config.sfp_len = int(sfp_len)
                config.use_sfp_quality = bool(use_sfp_quality)
                config.wick_min_ticks = int(wick_min_ticks)
                config.close_back_pct = float(close_back_pct)

                # SL zone
                config.use_swing_sl = bool(use_swing_sl)
                config.use_prev_candle_sl = bool(use_prev_candle_sl)
                config.sl_buf_ticks = int(sl_buf_ticks)
                config.use_atr_buffer = bool(use_atr_buffer)
                config.atr_mult = float(atr_mult)

                # Smart trailing
                config.enable_smart_trail = bool(enable_smart_trail)
                config.use_arm_after_rr = bool(use_arm_after_rr)
                config.arm_rr = float(arm_rr)
                config.arm_rr_basis = str(arm_rr_basis)

                # –ë–∞–∑–∏—Å —Ç—Ä–µ–π–ª–∞
                config.trailing_basis = str(trailing_basis)
                config.trailing_r = float(trailing_r)
                config.trailing_offset_r = float(trailing_offset_r)
                config.trailing_perc = float(trailing_perc)
                config.trailing_offset_perc = float(trailing_offset_perc)
                config.trailing_offset = float(trailing_offset_perc)  # alias

                # –ë–∞—Ä–æ–≤—ã–π —Ç—Ä–µ–π–ª/–ø—Ä–æ—á–µ–µ
                config.use_bar_trail = bool(use_bar_trail)
                config.trail_lookback = int(trail_lookback)
                config.trail_buf_ticks = int(trail_buf_ticks)

                # –ò–Ω—Ç—Ä–∞–±–∞—Ä/TF
                config.intrabar_tf = str(intrabar_tf)
                config.use_intrabar = bool(use_intrabar)

                # Cooldown
                config.cooldown_minutes = int(cd1)

                # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
                ok = config.validate()
                if not ok:
                    st.error("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å –∑–Ω–∞—á–µ–Ω–∏—è.")
                else:
                    config.save_config()
                    st.success("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –≤ —Ç–æ—Ä–≥–æ–≤–ª–µ!")

            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")

    # ============================== –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö ==============================
    st.markdown("---")
    st.subheader("üìã –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")

    with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (config.json)"):
        try:
            st.json(config.to_dict())
        except Exception:
            st.write(config.to_dict())

if __name__ == "__main__":
    main()
