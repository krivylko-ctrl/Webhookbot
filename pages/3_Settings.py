import streamlit as st
import pandas as pd
from datetime import datetime
import json
import os

from config import Config
from database import Database
from state_manager import StateManager
from bybit_api import BybitAPI

st.set_page_config(page_title="Settings", page_icon="‚öôÔ∏è", layout="wide")

def main():
    st.title("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ KWIN")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    @st.cache_resource
    def init_components():
        config = Config()
        db = Database()
        state_manager = StateManager(db)
        return config, db, state_manager
    
    config, db, state_manager = init_components()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–∫
    tab1, tab2, tab3, tab4, tab5 = st.tabs([
        "üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", 
        "üîÑ Smart Trailing", 
        "üìä SFP –§–∏–ª—å—Ç—Ä—ã", 
        "üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–ª–æ–º", 
        "üîß API & –°–∏—Å—Ç–µ–º–∞"
    ])
    
    # === –û–°–ù–û–í–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´ ===
    with tab1:
        st.markdown("### üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")
        st.markdown("*–≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö inputs –≤ TradingView*")
        
        col1, col2 = st.columns(2)
        
        with col1:
            risk_reward = st.number_input(
                "üéØ TP Risk/Reward Ratio",
                min_value=0.5,
                max_value=5.0,
                value=config.risk_reward,
                step=0.1,
                help="–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫–∞ –∫ –ø—Ä–∏–±—ã–ª–∏ –¥–ª—è —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞"
            )
            
            sfp_len = st.number_input(
                "üìè Swing Length",
                min_value=1,
                max_value=10,
                value=config.sfp_len,
                step=1,
                help="–î–ª–∏–Ω–∞ —Å–≤–∏–Ω–≥–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç–∫—Å—Ç—Ä–µ–º—É–º–æ–≤"
            )
            
            risk_pct = st.number_input(
                "üí∏ Risk % per trade",
                min_value=0.1,
                max_value=10.0,
                value=config.risk_pct,
                step=0.1,
                format="%.1f",
                help="–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞, —Ä–∏—Å–∫—É–µ–º—ã–π –≤ –∫–∞–∂–¥–æ–π —Å–¥–µ–ª–∫–µ"
            )
        
        with col2:
            period_choice = st.selectbox(
                "üìÖ Backtest Period",
                options=["30", "60", "180"],
                index=["30", "60", "180"].index(config.period_choice),
                help="–ü–µ—Ä–∏–æ–¥ –¥–ª—è –±—ç–∫—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –¥–Ω—è—Ö"
            )
            
            st.markdown("#### üìä –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è")
            st.info(f"""
            **Risk/Reward:** {config.risk_reward}
            **Swing Length:** {config.sfp_len}
            **Risk per Trade:** {config.risk_pct}%
            **Backtest Period:** {config.period_choice} –¥–Ω–µ–π
            """)
    
    # === SMART TRAILING ===
    with tab2:
        st.markdown("### üîÑ Smart Trailing System")
        st.markdown("*–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã —É–º–Ω–æ–≥–æ —Ç—Ä–µ–π–ª–∏–Ω–≥–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å–æ–≤*")
        
        enable_smart_trail = st.checkbox(
            "‚úÖ Enable Smart Trailing TP",
            value=config.enable_smart_trail,
            help="–í–∫–ª—é—á–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —É–º–Ω–æ–≥–æ —Ç—Ä–µ–π–ª–∏–Ω–≥–∞"
        )
        
        if enable_smart_trail:
            col1, col2 = st.columns(2)
            
            with col1:
                st.markdown("#### üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–µ–π–ª–∏–Ω–≥–∞")
                
                trailing_perc = st.number_input(
                    "üìà Trailing %",
                    min_value=0.1,
                    max_value=5.0,
                    value=config.trailing_perc,
                    step=0.1,
                    help="–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç—Ä–µ–π–ª–∏–Ω–≥–∞"
                )
                
                trailing_offset = st.number_input(
                    "üìè Trailing Offset %",
                    min_value=0.1,
                    max_value=5.0,
                    value=config.trailing_offset,
                    step=0.1,
                    help="–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –¥–ª—è —Ç—Ä–µ–π–ª–∏–Ω–≥–∞"
                )
                
                use_arm_after_rr = st.checkbox(
                    "üéØ Enable Arm after RR‚â•X",
                    value=config.use_arm_after_rr,
                    help="–í–∫–ª—é—á–∞—Ç—å —Ç—Ä–µ–π–ª–∏–Ω–≥ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ RR"
                )
                
                if use_arm_after_rr:
                    arm_rr = st.number_input(
                        "üî¢ Arm RR (R)",
                        min_value=0.1,
                        max_value=2.0,
                        value=config.arm_rr,
                        step=0.1,
                        help="RR –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞—Ä–º–∏–Ω–≥–∞"
                    )
                else:
                    arm_rr = config.arm_rr
            
            with col2:
                st.markdown("#### üìä Bar Trail –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
                
                use_bar_trail = st.checkbox(
                    "üìä Use Bar-Low/High Smart Trail",
                    value=config.use_bar_trail,
                    help="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–µ–π–ª–∏–Ω–≥ –ø–æ –±–∞—Ä–∞–º"
                )
                
                if use_bar_trail:
                    trail_lookback = st.number_input(
                        "üëÄ Trail lookback bars",
                        min_value=1,
                        max_value=200,
                        value=config.trail_lookback,
                        step=1,
                        help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞—Ä–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–π–ª–∏–Ω–≥–∞"
                    )
                    
                    trail_buf_ticks = st.number_input(
                        "üìè Trail buffer (ticks)",
                        min_value=0,
                        max_value=100,
                        value=config.trail_buf_ticks,
                        step=1,
                        help="–ë—É—Ñ–µ—Ä –≤ —Ç–∏–∫–∞—Ö –¥–ª—è —Ç—Ä–µ–π–ª–∏–Ω–≥–∞"
                    )
                else:
                    trail_lookback = config.trail_lookback
                    trail_buf_ticks = config.trail_buf_ticks
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –µ—Å–ª–∏ —Ç—Ä–µ–π–ª–∏–Ω–≥ –æ—Ç–∫–ª—é—á–µ–Ω
            trailing_perc = config.trailing_perc
            trailing_offset = config.trailing_offset
            use_arm_after_rr = config.use_arm_after_rr
            arm_rr = config.arm_rr
            use_bar_trail = config.use_bar_trail
            trail_lookback = config.trail_lookback
            trail_buf_ticks = config.trail_buf_ticks
    
    # === SFP –§–ò–õ–¨–¢–†–´ ===
    with tab3:
        st.markdown("### üìä SFP Quality Filters")
        st.markdown("*–§–∏–ª—å—Ç—Ä—ã –∫–∞—á–µ—Å—Ç–≤–∞ Swing Failure Pattern*")
        
        use_sfp_quality = st.checkbox(
            "üîç Filter: SFP quality (wick+closeback)",
            value=config.use_sfp_quality,
            help="–í–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∫–∞—á–µ—Å—Ç–≤–∞ SFP –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤"
        )
        
        if use_sfp_quality:
            col1, col2 = st.columns(2)
            
            with col1:
                wick_min_ticks = st.number_input(
                    "üìè SFP: min wick depth (ticks)",
                    min_value=0,
                    max_value=100,
                    value=config.wick_min_ticks,
                    step=1,
                    help="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ —Ç–µ–Ω–∏ –≤ —Ç–∏–∫–∞—Ö"
                )
                
                close_back_pct = st.number_input(
                    "üîÑ SFP: min close-back % of wick",
                    min_value=0.0,
                    max_value=1.0,
                    value=config.close_back_pct,
                    step=0.01,
                    format="%.2f",
                    help="–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–∫–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ—Ç —Ç–µ–Ω–∏"
                )
            
            with col2:
                st.markdown("#### üìä –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤")
                st.info("""
                **Wick Depth:** –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ —Ç–µ–Ω–∏ –¥–ª—è –≤–∞–ª–∏–¥–Ω–æ–≥–æ SFP
                
                **Close Back %:** –ü—Ä–æ—Ü–µ–Ω—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω—ã –∑–∞–∫—Ä—ã—Ç–∏—è –æ—Ç —ç–∫—Å—Ç—Ä–µ–º—É–º–∞ —Ç–µ–Ω–∏
                
                –≠—Ç–∏ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–º–æ–≥–∞—é—Ç –æ—Ç—Å–µ—è—Ç—å —Å–ª–∞–±—ã–µ SFP —Å–∏–≥–Ω–∞–ª—ã –∏ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã.
                """)
        else:
            wick_min_ticks = config.wick_min_ticks
            close_back_pct = config.close_back_pct
    
    # === –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–ü–ò–¢–ê–õ–û–ú ===
    with tab4:
        st.markdown("### üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–ª–æ–º –∏ —Ä–∏—Å–∫–∞–º–∏")
        st.markdown("*–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–∏–±—ã–ª–∏*")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("#### üìä –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π")
            
            limit_qty_enabled = st.checkbox(
                "üö´ Limit Max Position Qty",
                value=config.limit_qty_enabled,
                help="–í–∫–ª—é—á–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏"
            )
            
            if limit_qty_enabled:
                max_qty_manual = st.number_input(
                    "üìä Max Qty (ETH)",
                    min_value=0.01,
                    max_value=1000.0,
                    value=config.max_qty_manual,
                    step=0.01,
                    format="%.2f",
                    help="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –≤ ETH"
                )
            else:
                max_qty_manual = config.max_qty_manual
        
        with col2:
            st.markdown("#### üí∞ –ü—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å")
            
            min_net_profit = st.number_input(
                "üíµ Min Net Profit ($)",
                min_value=0.0,
                max_value=100.0,
                value=config.min_net_profit,
                step=0.1,
                help="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–¥–µ–ª–∫–∏"
            )
            
            taker_fee_rate = st.number_input(
                "üí∏ Taker Fee Rate",
                min_value=0.0,
                max_value=1.0,
                value=config.taker_fee_rate,
                step=0.00001,
                format="%.5f",
                help="–ö–æ–º–∏—Å—Å–∏—è —Ç–µ–π–∫–µ—Ä–∞ (–æ–±—ã—á–Ω–æ 0.00055 –¥–ª—è Bybit)"
            )
        
        st.markdown("#### üìä –¢–µ–∫—É—â–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è")
        current_equity = state_manager.get_equity()
        max_risk = current_equity * (risk_pct / 100)
        
        st.info(f"""
        **–¢–µ–∫—É—â–∏–π Equity:** ${current_equity:.2f}
        **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∏—Å–∫ –Ω–∞ —Å–¥–µ–ª–∫—É:** ${max_risk:.2f}
        **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏:** {max_qty_manual if limit_qty_enabled else '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'} ETH
        **–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å:** ${min_net_profit:.2f}
        """)
    
    # === API & –°–ò–°–¢–ï–ú–ê ===
    with tab5:
        st.markdown("### üîß API –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("#### üîë API Configuration")
            
            # API –∫–ª—é—á–∏ (—Ç–æ–ª—å–∫–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞)
            api_key = os.getenv("BYBIT_API_KEY", "")
            api_secret = os.getenv("BYBIT_API_SECRET", "")
            
            if api_key and api_secret:
                st.success("‚úÖ API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
                st.write(f"**API Key:** {api_key[:8]}...{api_key[-4:] if len(api_key) > 12 else ''}")
            else:
                st.error("‚ùå API –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
                st.markdown("""
                –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
                - `BYBIT_API_KEY`
                - `BYBIT_API_SECRET`
                """)
            
            # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            if st.button("üîç –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API"):
                if api_key and api_secret:
                    try:
                        api = BybitAPI(api_key, api_secret, testnet=False)
                        server_time = api.get_server_time()
                        if server_time:
                            st.success(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! –í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞: {datetime.fromtimestamp(server_time)}")
                        else:
                            st.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API")
                    except Exception as e:
                        st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                else:
                    st.warning("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏")
        
        with col2:
            st.markdown("#### üóÑÔ∏è Database Management")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            try:
                total_trades = len(db.get_recent_trades(1000))
                equity_records = len(db.get_equity_history(365))
                
                st.info(f"""
                **–í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫ –≤ –ë–î:** {total_trades}
                **–ó–∞–ø–∏—Å–µ–π equity:** {equity_records}
                **–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ë–î:** ~{os.path.getsize(db.db_path) / 1024:.1f} KB
                """)
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ë–î: {e}")
            
            # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
            col_a, col_b = st.columns(2)
            
            with col_a:
                if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ"):
                    try:
                        db.cleanup_old_data(days_to_keep=90)
                        st.success("‚úÖ –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
                    except Exception as e:
                        st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            
            with col_b:
                if st.button("üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"):
                    try:
                        trades = db.get_recent_trades(1000)
                        if trades:
                            df = pd.DataFrame(trades)
                            csv = df.to_csv(index=False)
                            st.download_button(
                                label="üì• –°–∫–∞—á–∞—Ç—å CSV",
                                data=csv,
                                file_name=f"kwin_trades_{datetime.now().strftime('%Y%m%d')}.csv",
                                mime="text/csv"
                            )
                        else:
                            st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞")
                    except Exception as e:
                        st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # === –ö–ù–û–ü–ö–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø ===
    st.markdown("---")
    st.markdown("### üíæ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
    
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", use_container_width=True):
            try:
                # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                new_config = {
                    'risk_reward': risk_reward,
                    'sfp_len': sfp_len,
                    'risk_pct': risk_pct,
                    'period_choice': period_choice,
                    'enable_smart_trail': enable_smart_trail,
                    'trailing_perc': trailing_perc,
                    'trailing_offset': trailing_offset,
                    'use_arm_after_rr': use_arm_after_rr,
                    'arm_rr': arm_rr,
                    'use_bar_trail': use_bar_trail,
                    'trail_lookback': trail_lookback,
                    'trail_buf_ticks': trail_buf_ticks,
                    'use_sfp_quality': use_sfp_quality,
                    'wick_min_ticks': wick_min_ticks,
                    'close_back_pct': close_back_pct,
                    'limit_qty_enabled': limit_qty_enabled,
                    'max_qty_manual': max_qty_manual,
                    'min_net_profit': min_net_profit,
                    'taker_fee_rate': taker_fee_rate
                }
                
                # –í–∞–ª–∏–¥–∞—Ü–∏—è
                config.update_from_dict(new_config)
                if config.validate():
                    st.success("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
                    st.rerun()
                else:
                    st.error("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
                    
            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
    
    with col2:
        if st.button("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫ —É–º–æ–ª—á–∞–Ω–∏—é", use_container_width=True):
            try:
                default_config = Config()
                config.update_from_dict(default_config.to_dict())
                st.success("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ —É–º–æ–ª—á–∞–Ω–∏—é!")
                st.rerun()
            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞: {e}")
    
    with col3:
        if st.button("üì• –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫", use_container_width=True):
            uploaded_file = st.file_uploader(
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏",
                type=['json'],
                key="config_upload"
            )
            
            if uploaded_file is not None:
                try:
                    config_data = json.load(uploaded_file)
                    config.update_from_dict(config_data)
                    st.success("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!")
                    st.rerun()
                except Exception as e:
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    
    with col4:
        if st.button("üì§ –≠–∫—Å–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫", use_container_width=True):
            try:
                config_json = json.dumps(config.to_dict(), indent=2, ensure_ascii=False)
                st.download_button(
                    label="üì• –°–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é",
                    data=config_json,
                    file_name=f"kwin_config_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json",
                    mime="application/json"
                )
            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: {e}")
    
    # === –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø –ò –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===
    st.markdown("---")
    st.markdown("### ‚ö†Ô∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    
    st.warning("""
    **–í–Ω–∏–º–∞–Ω–∏–µ!** 
    - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–ª–∏—è–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–æ–≤—ã–µ —Å–¥–µ–ª–∫–∏
    - –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ —Å—Ç–∞—Ä—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
    - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –Ω–µ–±–æ–ª—å—à–∏—Ö —Å—É–º–º–∞—Ö
    - –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏
    """)
    
    st.info("""
    **–°–æ–≤–µ—Ç:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—ç–∫—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä–µ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ.
    """)

if __name__ == "__main__":
    main()
