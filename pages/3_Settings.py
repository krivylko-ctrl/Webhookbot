import streamlit as st
import sys
import os

# –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—à—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ –ø–æ–¥–ø–∞–ø–∫–∏ ‚Äî –¥–æ–±–∞–≤–∏–º –∫–æ—Ä–µ–Ω—å –≤ PYTHONPATH
ROOT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if ROOT_DIR not in sys.path:
    sys.path.append(ROOT_DIR)

from config import Config

st.set_page_config(
    page_title="KWIN Bot - –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
    page_icon="‚öôÔ∏è",
    layout="wide"
)

def main():
    st.title("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ KWIN Trading Bot")
    st.markdown("---")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–≤–Ω—É—Ç—Ä–∏ –æ–Ω–∞ –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ—Ç config.json, –µ—Å–ª–∏ –µ—Å—Ç—å)
    config = Config()

    # ========================= –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏ =========================
    st.subheader("üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏")

    col1, col2 = st.columns(2)
    with col1:
        risk_pct = st.number_input(
            "–†–∏—Å–∫ –Ω–∞ —Å–¥–µ–ª–∫—É (%)",
            min_value=0.1,
            max_value=10.0,
            value=float(config.risk_pct),
            step=0.1,
            help="–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞, —Ä–∏—Å–∫—É–µ–º—ã–π –Ω–∞ –æ–¥–Ω—É —Å–¥–µ–ª–∫—É"
        )

        risk_reward = st.number_input(
            "Risk/Reward —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ",
            min_value=0.5,
            max_value=5.0,
            value=float(config.risk_reward),
            step=0.1,
            help="–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏ –∫ —É–±—ã—Ç–∫—É (R:R)"
        )

        max_qty = st.number_input(
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è (–≤ –±–∞–∑–æ–≤–æ–º –∞–∫—Ç–∏–≤–µ)",
            min_value=0.001,
            max_value=1000.0,
            value=float(config.max_qty_manual),
            step=0.001,
            help="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ (—É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞)"
        )

    with col2:
        sfp_len = st.number_input(
            "SFP Length",
            min_value=1,
            max_value=10,
            value=int(getattr(config, 'sfp_len', 2)),
            help="–î–ª–∏–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ Swing Failure Pattern (–∫–∞–∫ –≤ Pine)"
        )

        use_sfp_quality = st.checkbox(
            "–§–∏–ª—å—Ç—Ä –∫–∞—á–µ—Å—Ç–≤–∞ SFP (wick + close-back)",
            value=bool(getattr(config, 'use_sfp_quality', True)),
            help="–í–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∫–∞—á–µ—Å—Ç–≤–∞ SFP"
        )

        wick_min_ticks = st.number_input(
            "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ —Ñ–∏—Ç–∏–ª—è (–≤ —Ç–∏–∫–∞—Ö)",
            min_value=0,
            max_value=100,
            value=int(getattr(config, 'wick_min_ticks', 7)),
            help="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ —Ñ–∏—Ç–∏–ª—è –¥–ª—è –≤–∞–ª–∏–¥–Ω–æ–≥–æ SFP (–≤ —Ç–∏–∫-—Å–∞–π–∑–∞—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞)"
        )

    # =============================== Smart Trailing ================================
    st.subheader("üéØ Smart Trailing")

    col1, col2 = st.columns(2)
    with col1:
        enable_smart_trail = st.checkbox(
            "–í–∫–ª—é—á–∏—Ç—å Smart Trailing",
            value=bool(getattr(config, 'enable_smart_trail', True)),
            help="–£–º–Ω—ã–π —Ç—Ä–µ–π–ª–∏–Ω–≥ SL (–∞–Ω–∞–ª–æ–≥ Pine-–ª–æ–≥–∏–∫–∏)"
        )

        use_arm_after_rr = st.checkbox(
            "–ê—Ä–º–∏–Ω–≥ —Ç—Ä–µ–π–ª–∞ –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è RR",
            value=bool(getattr(config, 'use_arm_after_rr', True)),
            help="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–π–ª–∏–Ω–≥ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ RR"
        )

        arm_rr = st.number_input(
            "RR –¥–ª—è –∞—Ä–º–∏–Ω–≥–∞",
            min_value=0.1,
            max_value=5.0,
            value=float(getattr(config, 'arm_rr', 0.5)),
            step=0.1,
            help="–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ R, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–∫–ª—é—á–∞–µ—Ç—Å—è —Ç—Ä–µ–π–ª"
        )

        arm_rr_basis = st.selectbox(
            "–ë–∞–∑–∞ —Ä–∞—Å—á—ë—Ç–∞ RR –¥–ª—è –∞—Ä–º–∏–Ω–≥–∞",
            options=["extremum", "last"],
            index=0 if getattr(config, "arm_rr_basis", "extremum") == "extremum" else 1,
            help="extremum ‚Äî —Å—á–∏—Ç–∞–µ–º –æ—Ç —ç–∫—Å—Ç—Ä–µ–º—É–º–∞ –±–∞—Ä–∞; last ‚Äî –æ—Ç —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã"
        )

    with col2:
        trailing_perc = st.number_input(
            "–ü—Ä–æ—Ü–µ–Ω—Ç —Ç—Ä–µ–π–ª–∏–Ω–≥–∞ (%)",
            min_value=0.0,
            max_value=5.0,
            value=float(getattr(config, 'trailing_perc', 0.5)),
            step=0.1,
            help="–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç —Ü–µ–Ω—ã –≤—Ö–æ–¥–∞ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ —Ç—Ä–µ–π–ª–∞"
        )

        trailing_offset_perc = st.number_input(
            "Offset —Ç—Ä–µ–π–ª–∏–Ω–≥–∞ (%)",
            min_value=0.0,
            max_value=5.0,
            value=float(getattr(config, 'trailing_offset_perc', 0.4)),
            step=0.1,
            help="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø –æ—Ç –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ —Ç—Ä–µ–π–ª–∞"
        )

        use_bar_trail = st.checkbox(
            "–ë–∞—Ä–æ–≤—ã–π —Ç—Ä–µ–π–ª–∏–Ω–≥ (lowest/highest N –∑–∞–∫—Ä—ã—Ç—ã—Ö –±–∞—Ä–æ–≤)",
            value=bool(getattr(config, 'use_bar_trail', True)),
            help="–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º —Ä–µ–∂–∏–º–æ–º: lowest(low, N)[1] / highest(high, N)[1]"
        )

    # =========================== –§–∏–ª—å—Ç—Ä—ã (–∏–∑ Pine) ===========================
    st.subheader("üõ°Ô∏è –§–∏–ª—å—Ç—Ä—ã SFP")

    col1, col2 = st.columns(2)
    with col1:
        close_back_pct = st.number_input(
            "Close-back (0.0 ‚Ä¶ 1.0)",
            min_value=0.0,
            max_value=1.0,
            value=float(getattr(config, 'close_back_pct', 1.0)),
            step=0.05,
            help="–¢—Ä–µ–±—É–µ–º–∞—è –¥–æ–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≥–ª—É–±–∏–Ω—ã —Ñ–∏—Ç–∏–ª—è (–∫–∞–∫ –≤ Pine)"
        )

    with col2:
        # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –ø–æ–∫–∞–∂–µ–º —Ç–µ–∫—É—â–∏–µ —à–∞–≥–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ (read-only)
        st.text_input(
            "Tick size (read-only)",
            value=str(getattr(config, 'tick_size', 0.01)),
            disabled=True
        )

    # ============================== –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ==============================
    st.markdown("---")
    c1, c2, c3 = st.columns([1, 2, 1])
    with c2:
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", type="primary", use_container_width=True):
            try:
                # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                config.risk_pct = float(risk_pct)
                config.risk_reward = float(risk_reward)
                config.max_qty_manual = float(max_qty)

                config.sfp_len = int(sfp_len)
                config.use_sfp_quality = bool(use_sfp_quality)
                config.wick_min_ticks = int(wick_min_ticks)
                config.close_back_pct = float(close_back_pct)

                config.enable_smart_trail = bool(enable_smart_trail)
                config.use_arm_after_rr = bool(use_arm_after_rr)
                config.arm_rr = float(arm_rr)
                config.arm_rr_basis = str(arm_rr_basis)

                config.trailing_perc = float(trailing_perc)
                config.trailing_offset_perc = float(trailing_offset_perc)
                # alias –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                config.trailing_offset = float(trailing_offset_perc)

                config.use_bar_trail = bool(use_bar_trail)

                # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
                ok = config.validate()
                if not ok:
                    st.error("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å –∑–Ω–∞—á–µ–Ω–∏—è.")
                else:
                    config.save_config()
                    st.success("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")

    # ============================== –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö ==============================
    st.markdown("---")
    st.subheader("üìã –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")

    with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (config.json)"):
        try:
            st.json(config.to_dict())
        except Exception:
            st.write(config.to_dict())

if __name__ == "__main__":
    main()
